--- ../src-base/minecraft/org/bukkit/configuration/ConfigurationSection.java
+++ ../src-work/minecraft/org/bukkit/configuration/ConfigurationSection.java
@@ -6,6 +6,7 @@
 
 import org.bukkit.Color;
 import org.bukkit.OfflinePlayer;
+import org.bukkit.configuration.serialization.ConfigurationSerializable;
 import org.bukkit.util.Vector;
 import org.bukkit.inventory.ItemStack;
 
@@ -59,6 +60,25 @@
     public boolean contains(String path);
 
     /**
+     * Checks if this {@link ConfigurationSection} contains the given path.
+     * <p>
+     * If the value for the requested path does not exist, the boolean parameter
+     * of true has been specified, a default value for the path exists, this
+     * will return true.
+     * <p>
+     * If a boolean parameter of false has been specified, true will only be
+     * returned if there is a set value for the specified path.
+     *
+     * @param path Path to check for existence.
+     * @param ignoreDefault Whether or not to ignore if a default value for the
+     * specified path exists.
+     * @return True if this section contains the requested path, or if a default
+     * value exist and the boolean parameter for this method is true.
+     * @throws IllegalArgumentException Thrown when path is null.
+     */
+    public boolean contains(String path, boolean ignoreDefault);
+
+    /**
      * Checks if this {@link ConfigurationSection} has a value set for the
      * given path.
      * <p>
@@ -588,6 +608,38 @@
 
     // Bukkit
     /**
+     * Gets the requested {@link ConfigurationSerializable} object at the given
+     * path.
+     *
+     * If the Object does not exist but a default value has been specified, this
+     * will return the default value. If the Object does not exist and no
+     * default value was specified, this will return null.
+     *
+     * @param <T> the type of {@link ConfigurationSerializable}
+     * @param path the path to the object.
+     * @param clazz the type of {@link ConfigurationSerializable}
+     * @return Requested {@link ConfigurationSerializable} object
+     */
+    public <T extends ConfigurationSerializable> T getSerializable(String path, Class<T> clazz);
+
+    /**
+     * Gets the requested {@link ConfigurationSerializable} object at the given
+     * path, returning a default value if not found
+     *
+     * If the Object does not exist then the specified default value will
+     * returned regardless of if a default has been identified in the root
+     * {@link Configuration}.
+     *
+     * @param <T> the type of {@link ConfigurationSerializable}
+     * @param path the path to the object.
+     * @param clazz the type of {@link ConfigurationSerializable}
+     * @param def the default object to return if the object is not present at
+     * the path
+     * @return Requested {@link ConfigurationSerializable} object
+     */
+    public <T extends ConfigurationSerializable> T getSerializable(String path, Class<T> clazz, T def);
+
+    /**
      * Gets the requested Vector by path.
      * <p>
      * If the Vector does not exist but a default value has been specified,
