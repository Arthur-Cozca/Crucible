--- ../src-base/minecraft/org/bukkit/command/defaults/VersionCommand.java
+++ ../src-work/minecraft/org/bukkit/command/defaults/VersionCommand.java
@@ -27,47 +27,12 @@
     @Override
     public boolean execute(CommandSender sender, String currentAlias, String[] args) {
         if (!testPermission(sender)) return true;
-
-        if (args.length == 0) {
-            sender.sendMessage("This server is running Crucible (Thermos) " + Bukkit.getBukkitVersion() + " | " + Bukkit.getVersion());
-        } else {
-            /*StringBuilder name = new StringBuilder();
-
-            for (String arg : args) {
-                if (name.length() > 0) {
-                    name.append(' ');
-                }
-
-                name.append(arg);
-            }
-
-            String pluginName = name.toString();
-            Plugin exactPlugin = Bukkit.getPluginManager().getPlugin(pluginName);
-            if (exactPlugin != null) {
-                describeToSender(exactPlugin, sender);
-                return true;
-            }
-
-            boolean found = false;
-            pluginName = pluginName.toLowerCase();
-            for (Plugin plugin : Bukkit.getPluginManager().getPlugins()) {
-                if (plugin.getName().toLowerCase().contains(pluginName)) {
-                    describeToSender(plugin, sender);
-                    found = true;
-                }
-            }
-
-            if (!found) {
-                sender.sendMessage("This server is not running any plugin by that name.");
-                sender.sendMessage("Use /plugins to get a list of plugins.");
-            }*/
-            sender.sendMessage("This server is not running any plugins.");
-        }
+        sender.sendMessage("This server is running Crucible (Thermos fork by CrucibleMC Team) " + Bukkit.getVersion());
+        sender.sendMessage("Bukkit version:" + Bukkit.getBukkitVersion());
         return true;
     }
 
     private void describeToSender(Plugin plugin, CommandSender sender) {
-/*
         PluginDescriptionFile desc = plugin.getDescription();
         sender.sendMessage(ChatColor.GREEN + desc.getName() + ChatColor.WHITE + " version " + ChatColor.GREEN + desc.getVersion());
 
@@ -86,7 +51,6 @@
                 sender.sendMessage("Authors: " + getAuthors(desc));
             }
         }
-*/
     }
 
     private String getAuthors(final PluginDescriptionFile desc) {
@@ -116,21 +80,8 @@
         Validate.notNull(sender, "Sender cannot be null");
         Validate.notNull(args, "Arguments cannot be null");
         Validate.notNull(alias, "Alias cannot be null");
-
-        List<String> completions = new ArrayList<String>();
+        List<String> completions = new ArrayList<>();
         completions.add("None");
         return completions;
-
-  /*      if (args.length == 1) {
-            List<String> completions = new ArrayList<String>();
-            String toComplete = args[0].toLowerCase();
-            for (Plugin plugin : Bukkit.getPluginManager().getPlugins()) {
-                if (StringUtil.startsWithIgnoreCase(plugin.getName(), toComplete)) {
-                    completions.add(plugin.getName());
-                }
-            }
-            return completions;
-        }
-        return ImmutableList.of();*/
     }
 }
